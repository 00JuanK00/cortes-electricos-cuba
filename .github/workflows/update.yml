name: Actualizaci√≥n Multi-Provincial
on:
  schedule:
    - cron: '*/45 * * * *'  # Ejecutar cada 45 minutos
  workflow_dispatch:        # Permite ejecuci√≥n manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # Permisos expl√≠citos de escritura
    timeout-minutes: 20     # Aumentado para manejar medios

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0    # Necesario para el diff de m√∫ltiples archivos

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon requests pytz python-dotenv
          sudo apt-get install -y jq parallel  # parallel para procesamiento m√°s r√°pido

      - name: Run multi-province scraper
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          echo "=== Iniciando scraping ==="
          python scripts/scrape_and_update.py
          
          echo "=== Reporte Detallado ==="
          echo "Total de provincias procesadas: $(ls -1 data/provincias/*.json | wc -l)"
          echo "Total de mensajes: $(jq -s 'add | length' data/provincias/*.json)"
          echo "Mensajes con medios: $(grep -r '"media_url":' data/provincias/ | wc -l)"
          echo "Distribuci√≥n de tipos de medios:"
          grep -r '"tipo_medio":' data/provincias/ | sort | uniq -c | sort -nr
          echo "========================="

      - name: Analyze media content
        id: media-analysis
        run: |
          # An√°lisis avanzado de medios
          MEDIA_STATS=$(find data/provincias -name "*.json" -exec jq -r '[.[].tipo_medio] | group_by(.) | map({key: .[0], value: length}) | from_entries' {} + | jq -s 'add')
          
          TOTAL_MEDIA=$(echo "$MEDIA_STATS" | jq '.foto // 0 + .documento // 0 + .sticker // 0')
          echo "::set-output name=TOTAL_MEDIA::$TOTAL_MEDIA"
          echo "::set-output name=MEDIA_STATS::$(echo $MEDIA_STATS | jq -c .)"

          # Verificaci√≥n de enlaces
          BAD_LINKS=$(grep -r '"media_url": null' data/provincias/ | wc -l)
          echo "::set-output name=BAD_LINKS::$BAD_LINKS"

      - name: Get changed provinces
        id: changes
        run: |
          git diff --name-only HEAD | grep -E 'data/provincias/.*\.json' > changed_files.txt
          if [ -s changed_files.txt ]; then
            PROVINCIAS=$(cat changed_files.txt | sed 's|data/provincias/||;s|\.json||' | tr '\n' ', ' | sed 's/, $//')
            MEDIA_UPDATES=$(cat changed_files.txt | xargs -I {} jq '[.[] | select(.media_url != null)] | length' {} | awk '{sum+=$1} END {print sum}')
            
            echo "::set-output name=PROVINCIAS::$PROVINCIAS"
            echo "::set-output name=MEDIA_UPDATES::$MEDIA_UPDATES"
            echo "::set-output name=CHANGED_FILES::$(cat changed_files.txt | tr '\n' ',')"
          else
            echo "::set-output name=PROVINCIAS::none"
            echo "::set-output name=MEDIA_UPDATES::0"
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.PROVINCIAS != 'none'
        run: |
          # Configura Git
          git config --global --add safe.directory /github/workspace
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          # Agrega cambios
          git add data/provincias/

          # Mensaje inteligente
          COMMIT_MSG="üìä Actualizaci√≥n: ${{ steps.changes.outputs.PROVINCIAS }}"
          COMMIT_MSG+=" | üñºÔ∏è ${{ steps.changes.outputs.MEDIA_UPDATES }} nuevos medios"
          COMMIT_MSG+=" | üïí $(date +'%Y-%m-%d %H:%M %Z')"
          
          # Commit y push
          git diff-index --quiet HEAD || {
            git commit -m "$COMMIT_MSG"
            git pull --rebase origin main
            git push origin HEAD:main
            echo "‚úÖ Push exitoso"
          }

      - name: Notify on significant changes
        if: steps.changes.outputs.MEDIA_UPDATES > 5
        run: |
          echo "‚ö†Ô∏è Se detectaron ${{ steps.changes.outputs.MEDIA_UPDATES }} nuevos medios" > changes.log
          echo "Provincias afectadas: ${{ steps.changes.outputs.PROVINCIAS }}" >> changes.log
          # Aqu√≠ puedes agregar notificaciones a Telegram/Discord/etc
