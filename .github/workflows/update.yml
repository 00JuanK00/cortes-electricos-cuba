name: Actualizar cortes eléctricos
on:
  schedule:
    - cron: '0 */2 * * *'  # Ejecución cada 2 horas
  workflow_dispatch:        # Permite ejecución manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # Permisos explícitos de escritura

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Crucial para autenticación posterior

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'      # Cache para instalaciones más rápidas

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon requests

      - name: Run scraper
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
        run: |
          python scripts/scrape_and_update.py

      - name: Commit and push changes
        run: |
          # Configuración inicial robusta
          git config --global --add safe.directory /github/workspace
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          
          # Autenticación segura
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          
          # Manejo inteligente de cambios
          git add data/cortes.json
          
          # Solo hace commit si hay cambios reales
          git diff-index --quiet HEAD || {
            git commit -m "Actualización automática: $(date +'%Y-%m-%d %H:%M %Z')"
            git pull --rebase origin main  # Evita conflictos
            git push origin HEAD:main
          }
