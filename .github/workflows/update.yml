name: Actualización Multi-Provincial
on:
  schedule:
     - cron: '*/45 * * * *'  # Ejecutar cada 45 minutos
  workflow_dispatch:        # Permite ejecución manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write       # Permisos explícitos de escritura

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0    # Necesario para el diff de múltiples archivos

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon requests pytz  # Añadido pytz aquí
          sudo apt-get install -y jq

      - name: Run multi-province scraper
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
        run: |
          python scripts/scrape_and_update.py
          echo "Provincias actualizadas:"
          ls -l data/provincias/ | grep .json

      - name: Get changed provinces
        id: changes
        run: |
          # Obtiene lista de provincias modificadas
          git diff --name-only HEAD | grep 'data/provincias/' > changed_files.txt
          if [ -s changed_files.txt ]; then
            echo "Modified provinces:"
            cat changed_files.txt
            # Extrae nombres de provincias para el mensaje de commit
            PROVINCIAS=$(cat changed_files.txt | sed 's|data/provincias/||;s|\.json||' | tr '\n' ', ' | sed 's/, $//')
            echo "::set-output name=PROVINCIAS::$PROVINCIAS"
          else
            echo "No changes detected"
            echo "::set-output name=PROVINCIAS::none"
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.PROVINCIAS != 'none'
        run: |
          # Configuración inicial
          git config --global --add safe.directory /github/workspace
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          # Añade todos los JSON modificados
          git add data/provincias/*.json

          # Mensaje de commit inteligente
          COMMIT_MSG="Actualización provincias: ${{ steps.changes.outputs.PROVINCIAS }} - $(date +'%Y-%m-%d %H:%M %Z')"
          
          # Commit y push con control de errores
          git diff-index --quiet HEAD || {
            git commit -m "$COMMIT_MSG"
            git pull --rebase origin main
            git push origin HEAD:main
            echo "✅ Changes pushed successfully"
          }
